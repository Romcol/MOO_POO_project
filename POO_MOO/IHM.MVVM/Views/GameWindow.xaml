<Window x:Class="IHM.MVVM.Views.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IHM.MVVM.Views"
        mc:Ignorable="d"
        Title="Smallworld" Height="563" Width="1000"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="bool2visibility"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding NextTurn}" Key="Enter"/>
    </Window.InputBindings>
    <DockPanel>
        <DockPanel.Background>
            <ImageBrush ImageSource="bg.jpg"/>
        </DockPanel.Background>
        <Grid DockPanel.Dock="Right" Visibility="{Binding hasMemUnit, Converter={StaticResource bool2visibility}}">
            <StackPanel  Orientation="Vertical" Grid.Row="0" DataContext="{Binding MemUnit}">
            <Label Content="Selected:"/>
            <Image Source="elf.gif" Width="50" Height="50" Visibility="{Binding isElf, Converter={StaticResource bool2visibility}}" />
            <Image Source="orc.png" Width="50" Height="50" Visibility="{Binding isOrc, Converter={StaticResource bool2visibility}}" />
            <Image Source="human.png" Width="50" Height="50" Visibility="{Binding isHuman, Converter={StaticResource bool2visibility}}" />
                <StackPanel  Orientation="Horizontal">
                    <Label Content="{Binding xUnit}"/>
                    <Label Content=","/>
                    <Label Content="{Binding yUnit}"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid DockPanel.Dock="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- Définiton des labels d'information / Par Binding sur SelectedTile -->
            <StackPanel  Orientation="Horizontal" Grid.Row="0">
                <StackPanel Orientation="Horizontal" DataContext="{Binding SelectedTile}">
                    <Label Foreground="Blue" Content="{Binding X}"/>
                    <Label Foreground="Blue" Content="{Binding Y}"/>
                    <Label Foreground="Red" Content="{Binding Type}"/>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding HasUnits, Converter={StaticResource bool2visibility}}">
                        <Label Content="Race:"/>
                        <Label Foreground="Green" Visibility="{Binding HasElf, Converter={StaticResource bool2visibility}}" Content="Elf" />
                        <Label Foreground="Brown"  Visibility="{Binding HasOrc, Converter={StaticResource bool2visibility}}" Content="Orc"/>
                        <Label Foreground="Orange"  Visibility="{Binding HasHuman, Converter={StaticResource bool2visibility}}" Content="Human"/>
                        <Label Content="Attack Points"/>
                        <Label Foreground="Red" Content="{Binding AttackPoints}"/>
                        <Label Content="Defence Points"/>
                        <Label Foreground="Blue" Content="{Binding DefencePoints}"/>
                        <Label Content="Move Points"/>
                        <Label Foreground="Orange" Content="{Binding MovePoints}"/>
                        <Label Content="Life Points"/>
                        <Label Foreground="Green" Content="{Binding LifePoints}"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <!--<StackPanel HorizontalAlignment="Center"  Orientation="Horizontal">
                <TextBox Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Label Content="{Binding Message}" />
            </StackPanel>-->
            <!-- Creation du bouton "Fin de tour" et Association à la commande 'NextTurn' -->
            <Button HorizontalAlignment="Right"  Content="Select" Command="{Binding Select}" Margin="0,0,170,0" Grid.Row="0"/>
            <Button HorizontalAlignment="Right"  Content="Save" Command="{Binding Save}" Margin="0,0,140,0" Grid.Row="0"/>
            <Button HorizontalAlignment="Right"  Content="Action" Command="{Binding DoAction}" Margin="0,0,60,0" Grid.Row="0"/>
            <Button HorizontalAlignment="Right"  Content="Next Turn" Command="{Binding NextTurn}" Grid.Row="0"/>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <Label Foreground="Black" Content="{Binding p1Name}" FontWeight="Bold"/>
                <Label Content=":"/>
                <Label Foreground="Silver" Content="{Binding p1Race}" FontWeight="Bold"/>
                <Label Foreground="Red" Visibility="{Binding isP1Turn, Converter={StaticResource bool2visibility}}" FontWeight="Bold" Content="(You!)"/>
                <Label Content="Victory points:"/>
                <Label Foreground="Green" Content="{Binding p1Pts}"/>
                <Label Content="Units:"/>
                <Label Foreground="Red" Content="{Binding p1Units}"/>
                <Label Content="|"/>
                <Label Foreground="Black" Content="{Binding p2Name}" FontWeight="Bold"/>
                <Label Content=":"/>
                <Label Foreground="Silver" Content="{Binding p2Race}" FontWeight="Bold"/>
                <Label Foreground="Red" Visibility="{Binding isP2Turn, Converter={StaticResource bool2visibility}}" FontWeight="Bold" Content="(You!)"/>
                <Label Content="Victory points:"/>
                <Label Foreground="Green" Content="{Binding p2Pts}"/>
                <Label Content="Units:"/>
                <Label Foreground="Red" Content="{Binding p2Units}"/>
            </StackPanel>
            <Label HorizontalAlignment="Right" Grid.Row="1" Content="Turns left:" Margin="0,0,20,0"/>
            <Label HorizontalAlignment="Right" Foreground="Blue" Grid.Row="1" Content="{Binding TurnsLeft}"/>
        </Grid>
        <ListBox ItemsSource="{Binding Tiles}" SelectedItem="{Binding SelectedTile, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
            <!--Définition du conteneur de la listBox : une grille uniforme -->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding Width}"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <!--Définition du style de la listBox -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <!-- Chaque élément (Item) de la listBox (ItemsSource = liste des tuiles "Tiles") sera associé à une grille (1x1) qui pourra superposer 3 entités : Rectangle+Ellipse+Rectangle  -->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <!--implictement = Datacontext = l'item-->
                    <Grid>
                        <!--<Rectangle Fill="{Binding Color}" Stroke="Black" StrokeThickness="1" Width="50" Height="50"/>-->
                        <!--<Ellipse Fill="White" "/>-->
                        <Image Source="{Binding ImageSource}" Width="50" Height="50"/>
                        <Image Source="elf.gif" Width="50" Height="50" Visibility="{Binding HasElf, Converter={StaticResource bool2visibility}}" />
                        <Image Source="orc.png" Width="50" Height="50" Visibility="{Binding HasOrc, Converter={StaticResource bool2visibility}}" />
                        <Image Source="human.png" Width="50" Height="50" Visibility="{Binding HasHuman, Converter={StaticResource bool2visibility}}" />
                        <Rectangle Stroke="Gray" StrokeThickness="5" Width="50" Height="50" Visibility="{Binding HasUnitSelected, Converter={StaticResource bool2visibility}}"/>
                        <Rectangle Stroke="Red" StrokeThickness="2" Width="50" Height="50" Visibility="{Binding IsSelected, Converter={StaticResource bool2visibility}}"/>
                        <TextBlock Width="15" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Background="Purple" Foreground="White" FontSize="13" Text="{Binding tileNbUnits}" Visibility="{Binding HasUnits, Converter={StaticResource bool2visibility}}"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</Window>
